{"ast":null,"code":"var _jsxFileName = \"/Users/albinadolfsson/movie-list-project/src/App.js\",\n    _s2 = $RefreshSig$();\n\nimport { render } from '@testing-library/react';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { element } from 'prop-types';\nimport { ReactVideo } from \"reactjs-media\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet currentTitle = `The Movie List`;\nconst currentList = [];\n\nconst title = /*#__PURE__*/_jsxDEV(\"h1\", {\n  className: \"App-title\",\n  children: currentTitle\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 15\n}, this);\n\nconst App = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [popular, setPopular] = useState(false);\n  const [topMovies, setTopmovies] = useState(false);\n  const [upcomingMovies, setUpcomingMovies] = useState(true);\n  let [currentList, setList] = useState([]);\n  let [videoSrc, setVideoSrc] = useState([]);\n\n  const ActivatePopular = () => {\n    setPopular((popular, true));\n    setTopmovies((topMovies, false));\n    setUpcomingMovies((upcomingMovies, false));\n  };\n\n  const ActivateTopMovies = () => {\n    setTopmovies((topMovies, true));\n    setUpcomingMovies((upcomingMovies, false));\n    setPopular((popular, false));\n  };\n\n  const ActivateUpcoming = () => {\n    setUpcomingMovies((upcomingMovies, true));\n    setTopmovies((topMovies, false));\n    setPopular((popular, false));\n  };\n\n  useEffect(() => {\n    if (popular) {\n      axios.get('https://api.themoviedb.org/3/movie/popular?api_key=1b34b56c896270b1a9bdd7563b01f45d').then(res => {\n        setList(res.data.results);\n      });\n    } else if (topMovies) {\n      axios.get('https://api.themoviedb.org/3/movie/top_rated?api_key=1b34b56c896270b1a9bdd7563b01f45d').then(res => {\n        setList(res.data.results);\n        console.log(res.data);\n      });\n    } else if (upcomingMovies) {\n      axios.get('https://api.themoviedb.org/3/movie/upcoming?api_key=1b34b56c896270b1a9bdd7563b01f45d').then(res => {\n        setList(res.data.results);\n        console.log(res.data);\n      });\n    }\n  }, [popular, topMovies, upcomingMovies]);\n\n  const MovieInfo = props => {\n    _s();\n\n    const [desc, setDescription] = useState(false);\n    const [video, setVideo] = useState(false);\n    const [currentid, setCurrentId] = useState();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"Movie-list\",\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"Movie-list\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Movie-background\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: props.poster_path,\n              className: \"Movie-image\",\n              onMouseEnter: () => setDescription(true),\n              onMouseLeave: () => setDescription(false),\n              onClick: () => setVideo(true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"https://upload.wikimedia.org/wikipedia/commons/9/99/Star_icon_stylized.svg\",\n              className: \"Star-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"Movie-rating\",\n              children: [props.vote_average, \"/10\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 127\n            }, this), desc && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Description-window\",\n              children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"Movie-title\",\n                children: [\" \", props.title, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: props.overview\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), video && axios.get(`https://api.themoviedb.org/3/movie/${props.id}/videos?api_key=1b34b56c896270b1a9bdd7563b01f45d`).then(res => {\n              setVideoSrc(res.data.results);\n            })( /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(ReactVideo, {\n                scr: `https://www.youtube.com/embed/${props.key}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this);\n  };\n\n  _s(MovieInfo, \"2TfJvm5n6OEoP7av9q3mJT+3rjI=\");\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [title, /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"Categorie-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"Categorie-list\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: ActivatePopular,\n            children: \"Popular\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"Categorie-list\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: ActivateTopMovies,\n            children: \"Top Movies\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"Categorie-list\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: ActivateUpcoming,\n            children: \"Upcoming\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-titles\",\n      children: [currentList.map(list => {\n        return /*#__PURE__*/_jsxDEV(MovieInfo, {\n          title: list.title,\n          poster_path: 'https://image.tmdb.org/t/p/w500/' + list.poster_path,\n          vote_average: list.vote_average,\n          overview: list.overview,\n          id: list.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 15\n        }, this);\n      }), videoSrc.map(videoPlayer => {\n        return /*#__PURE__*/_jsxDEV(MovieInfo, {}, videoPlayer.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(App, \"4wgbIibWSleyEfK2sCyGlKRPRPM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/albinadolfsson/movie-list-project/src/App.js"],"names":["render","React","useEffect","useState","axios","element","ReactVideo","currentTitle","currentList","title","App","popular","setPopular","topMovies","setTopmovies","upcomingMovies","setUpcomingMovies","setList","videoSrc","setVideoSrc","ActivatePopular","ActivateTopMovies","ActivateUpcoming","get","then","res","data","results","console","log","MovieInfo","props","desc","setDescription","video","setVideo","currentid","setCurrentId","poster_path","vote_average","overview","id","key","map","list","videoPlayer"],"mappings":"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","sourcesContent":["import { render } from '@testing-library/react';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { element } from 'prop-types';\nimport { ReactVideo } from \"reactjs-media\";\n\nlet currentTitle = `The Movie List`;\n\nconst currentList = []\n\nconst title = <h1 className=\"App-title\">{currentTitle}</h1>;\n\nconst App = () => {\n  const [popular, setPopular] = useState(false)\n  const [topMovies, setTopmovies] = useState(false)\n  const [upcomingMovies, setUpcomingMovies] = useState(true)\n  let [currentList, setList] = useState([])\n  let [videoSrc, setVideoSrc] = useState([])\n\n  const ActivatePopular = () => {\n    setPopular((\n      popular, true\n    ))\n\n    setTopmovies((\n      topMovies, false\n    ))\n\n    setUpcomingMovies((\n      upcomingMovies, false\n    ))\n  }\n\n  const ActivateTopMovies = () => {\n    setTopmovies((\n      topMovies, true\n    ))\n\n    setUpcomingMovies((\n      upcomingMovies, false\n    ))\n\n    setPopular((\n      popular, false\n    ))\n  }\n\n  const ActivateUpcoming = () => {\n    setUpcomingMovies((\n      upcomingMovies, true\n    ))\n\n    setTopmovies((\n      topMovies, false\n    ))\n\n    setPopular((\n      popular, false\n    ))\n  }\n\n  useEffect(() => {\n\n    if (popular)\n    {\n      axios.get('https://api.themoviedb.org/3/movie/popular?api_key=1b34b56c896270b1a9bdd7563b01f45d').then(res => {\n\n      setList(\n        res.data.results\n      )\n\n      })\n    }\n    else if (topMovies)\n    {\n      axios.get('https://api.themoviedb.org/3/movie/top_rated?api_key=1b34b56c896270b1a9bdd7563b01f45d').then(res => {\n\n      setList(\n        res.data.results\n      )\n\n      console.log(res.data)\n    \n      })\n    }\n    else if (upcomingMovies)\n    {\n      axios.get('https://api.themoviedb.org/3/movie/upcoming?api_key=1b34b56c896270b1a9bdd7563b01f45d').then(res => {\n\n      setList(\n        res.data.results\n      )\n\n      console.log(res.data)\n    \n      })\n    }\n\n  }, [popular, topMovies, upcomingMovies] )\n\n  const MovieInfo = (props) => {\n    const [desc, setDescription] = useState(false)\n    const [video, setVideo] = useState(false)\n    const [currentid, setCurrentId] = useState()\n\n\n    return (\n      <div>\n        <ol className=\"Movie-list\">\n          <li className=\"Movie-list\">\n\n          <div className=\"Movie-background\">\n            <img src={props.poster_path} className=\"Movie-image\" onMouseEnter={() => setDescription(true)} onMouseLeave={() => setDescription(false)} onClick={() => setVideo(true)} ></img>\n            <img src=\"https://upload.wikimedia.org/wikipedia/commons/9/99/Star_icon_stylized.svg\" className=\"Star-icon\"></img><p className=\"Movie-rating\">{props.vote_average}/10</p>\n\n            {desc &&(\n              <div className=\"Description-window\">\n              <br/>\n              <br/>\n              <br/>\n              <br/>\n              <br/>\n              <br/>\n              <h1 className=\"Movie-title\"> {props.title} </h1>\n              <p>{props.overview}</p>\n            </div>\n            )}\n\n            {video &&\n            \n            axios.get(`https://api.themoviedb.org/3/movie/${props.id}/videos?api_key=1b34b56c896270b1a9bdd7563b01f45d`).then(res => {\n    \n              setVideoSrc(\n                res.data.results\n              )\n    \n            })\n              \n            \n            (\n              <div>\n              <ReactVideo scr={`https://www.youtube.com/embed/${props.key}`} />\n              </div>\n            )}\n\n\n\n          </div>\n\n        </li>\n        </ol>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {title}\n        <ol className=\"Categorie-list\">\n          <li className=\"Categorie-list\">\n            <button onClick={ActivatePopular}>\n\n              Popular\n\n            </button>\n          </li>\n          <li className=\"Categorie-list\">\n            <button onClick={ActivateTopMovies}>\n\n              Top Movies\n\n            </button>\n          </li>\n          <li className=\"Categorie-list\">\n            <button onClick={ActivateUpcoming}>\n\n              Upcoming\n\n            </button>\n          </li>\n        </ol>\n\n      </header>\n\n      <div className=\"movie-titles\">\n          {currentList.map((list) => {\n            return (\n              <MovieInfo title={list.title} poster_path={'https://image.tmdb.org/t/p/w500/' + list.poster_path} vote_average={list.vote_average} overview={list.overview} id={list.id}/>\n            );\n          })}\n\n          {videoSrc.map((videoPlayer) => {\n            return (\n              <MovieInfo key={videoPlayer.key} />\n            );\n          })}\n      </div>\n\n    </div>\n    \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}